<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>

    <!-- do not change severity to 'error', as that will hide errors caused by exceptions -->
    <property name="severity" value="warning"/>

    <!-- haltOnException is required for exception fixes and reporting of all exceptions -->
    <property name="haltOnException" value="false"/>

    <!-- BeforeExecutionFileFilters is required for sources of java9 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>


    <!-- Filters -->
    <module name="SeverityMatchFilter">
        <!-- report all violations except ignore -->
        <property name="severity" value="ignore"/>
        <property name="acceptOnMatch" value="false"/>
    </module>

    <!-- Tone down the checking for test code -->
    <module name="SuppressionSingleFilter">
        <property name="checks" value="JavadocPackage"/>
        <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
    </module>
    <module name="SuppressionSingleFilter">
        <property name="checks" value="JavadocMethod"/>
        <property name="files" value=".*[\\/]src[\\/](test|it)[\\/].*(?&lt;!Support)\.java"/>
    </module>
    <module name="SuppressWarningsFilter"/>
    <module name="SuppressWithPlainTextCommentFilter">
        <!--
          Use suppressions.xml for suppressions, this is only example.
          checkFormat will prevent suppression comments from being valid.
        -->
        <property name="checkFormat" value="IGNORETHIS"/>
        <property name="offCommentFormat" value="CSOFF\: .*"/>
        <property name="onCommentFormat" value="CSON\: .*"/>
    </module>

    <!-- Headers -->
    <!-- Javadoc Comments -->
    <module name="JavadocPackage">
        <property name="allowLegacy" value="false"/>
    </module>

    <!-- Miscellaneous -->
    <module name="NewlineAtEndOfFile"/>
    <module name="Translation">
        <property name="requiredTranslations" value="de, fr, fi, es, pt, ja, tr, zh"/>
    </module>
    <module name="UniqueProperties"/>
    <module name="OrderedProperties"/>

    <!-- Regexp -->
    <module name="RegexpMultiline">
        <property name="id" value="regexpMultilineDefault"/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="noIndentationConfigExamples"/>
        <property name="format" value="&lt;source&gt;\r?\n\s+"/>
        <property name="fileExtensions" value="xml"/>
        <property name="message" value="Content of source tag should not be Indented"/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="noConsecutiveLines"/>
        <property name="format" value="\r?\n[\t ]*\r?\n[\t ]*\r?\n"/>
        <property name="fileExtensions" value="java,xml,properties"/>
        <property name="message" value="Unnecessary consecutive lines"/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="commentFirstSentenceMultiline"/>
        <property name="format" value="/\*\*\W+\* +\p{javaLowerCase}"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                  value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="noEmptyFile"/>
        <property name="format" value="^\s*$"/>
        <property name="matchAcrossLines" value="true"/>
        <property name="message" value="Empty file is not allowed"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="noTrailingWhitespace"/>
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Trailing whitespace is not allowed"/>
    </module>
    <!-- This is needed for correct metadata generation -->
    <module name="RegexpSingleline">
        <property name="id" value="propertyTypeOnNewLine"/>
        <property name="format" value="^ \* .+(Type|Default value|Validation type) is \{@code "/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Property attribute should be on new javadoc line"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="commentFirstSentenceSingleline"/>
        <property name="format" value="/\*\* +\p{javaLowerCase}"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                  value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="lineLengthGrammar"/>
        <property name="format" value="^(?!(.*http|import)).{101,}$"/>
        <property name="fileExtensions" value="g, g4"/>
        <property name="message" value="Line should not be longer than 100 symbols"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="lineLengthXml"/>
        <property name="format"
                  value="^(?!(\s*,?\s*&lt;a href=&quot;[^&quot;]+&quot;&gt;|.*http)).{101,}$"/>
        <property name="fileExtensions" value="xml, vm"/>
        <property name="message" value="Line should not be longer than 100 symbols"/>
    </module>
    <!--
     Links to .dtd files should start with "/", "http://" or "https://",
     otherwise they will be broken after archiving the documentation.
     See https://github.com/checkstyle/checkstyle/issues/7340 for details.
    -->
    <module name="RegexpSingleline">
        <property name="id" value="noRelativeLinks"/>
        <property name="format" value="href=&quot;(?!\/|https?:\/\/).*?\.dtd&quot;"/>
        <property name="fileExtensions" value="xml, vm"/>
        <property name="message"
                  value="Relative links to DTD files are prohibited. Please use absolute path or uri instead."/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="noSourceforgeNetLinks"/>
        <property name="format" value="checkstyle\.sourceforge\.net"/>
        <property name="message"
                  value="Old site links should not be used, please use https://checkstyle.org"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="noSourceforgeIoLinks"/>
        <property name="format" value="checkstyle\.sourceforge\.io"/>
        <property name="message"
                  value="Old site links should not be used, please use https://checkstyle.org"/>
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="noPackageCommentWithOtherVisibility"/>
        <property name="format" value="/\*\s+package\s+\*/\s+(private|protected|public)"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                  value="Package comment marker should not be used if other visibility is defined"/>
    </module>
    <module name="RegexpOnFilename">
        <property name="id" value="regexpOnFilenameWithSpace"/>
    </module>
    <module name="RegexpOnFilename">
        <property name="id" value="javaFileLocation"/>
        <property name="folderPattern" value="[\\/]src[\\/]\w+[\\/]java[\\/]"/>
        <property name="fileNamePattern" value="\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                 value="Only java files should be located in the ''src/*/java'' folders."/>
    </module>
    <module name="RegexpOnFilename">
        <property name="id" value="xmlFileLocation"/>
        <property name="folderPattern" value="[\\/]src[\\/]xdocs[\\/]"/>
        <property name="fileNamePattern" value="\.(xml)|(vm)$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                 value="All files in the ''src/xdocs'' folder should have the ''xml'' or ''vm'' extension."/>
    </module>
    <module name="RegexpOnFilename">
        <property name="id" value="testFileLocation"/>
        <property name="folderPattern" value="[\\/]src[\\/]it[\\/]java[\\/]"/>
        <property name="fileNamePattern" value="^((\w+Test)|(\w+TestSupport)|(Abstract\w+))\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                 value="All files in the ''src/it/java'' folder
                    should be named ''*Test.java'' or ''Abstract*.java''."/>
    </module>

    <!-- Size Violations -->
    <module name="FileLength">
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="100"/>
        <property name="ignorePattern" value="^ *\* *([^ ]+|\{@code .*|&lt;a href=&quot;[^&quot;]+&quot;&gt;)$"/>
    </module>

    <!-- Whitespace -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="false"/>
    </module>


    <module name="TreeWalker">
        <module name="RightCurly">
            <property name="option" value="same"/>
            <property name="tokens" value=""/>
        </module>
        <!-- Example of sevntu.checkstyle Check usage -->
        <!-- <module name="NestedSwitchCheck"/> -->

        <!-- usuppress javadoc parsing errors, as we test Check not a parser -->
        <module name="SuppressionXpathSingleFilter">
            <property name="message" value="Javadoc comment at column \d+ has parse error"/>
        </module>
    </module>

    <!-- as we run on regression even on non-compiled files we need to skip exceptions on them -->
    <module name="SuppressionSingleFilter">
        <property name="message" value="Exception occurred while parsing"/>
        <property name="checks" value="Checker"/>
    </module>
</module>
