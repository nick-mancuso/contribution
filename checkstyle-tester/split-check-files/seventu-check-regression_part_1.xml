<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name = "Checker">
    <property name="charset" value="UTF-8"/>

    <!-- do not change severity to 'error', as that will hide errors caused by exceptions -->
    <property name="severity" value="warning"/>

    <!-- haltOnException is required for exception fixes and reporting of all exceptions -->
    <property name="haltOnException" value="false"/>

    <!-- BeforeExecutionFileFilters is required for sources of java9 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$" />
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>

       <!-- Design -->
    <module name="com.github.sevntu.checkstyle.checks.design.ChildBlockLengthCheck">
      <property name="blockTypes"
        value="LITERAL_IF,LITERAL_ELSE,LITERAL_WHILE,LITERAL_DO,LITERAL_FOR,LITERAL_SWITCH,LITERAL_TRY,LITERAL_CATCH"/>
      <property name="maxChildBlockPercentage" value="90"/>
      <property name="ignoreBlockLinesCount" value="50"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.design.ForbidWildcardAsReturnTypeCheck">
      <property name="checkPublicMethods" value="true"/>
      <property name="checkPackageMethods" value="true"/>
      <property name="checkProtectedMethods" value="true"/>
      <property name="checkPrivateMethods" value="false"/>
      <property name="checkOverrideMethods" value="false"/>
      <property name="checkDeprecatedMethods" value="false"/>
      <property name="allowReturnWildcardWithSuper" value="false"/>
      <property name="allowReturnWildcardWithExtends" value="false"/>
      <property name="returnTypeClassNamesIgnoreRegex" value="^(Comparator|Comparable)$"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.design.NoMainMethodInAbstractClassCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.PublicReferenceToPrivateTypeCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.StaticMethodCandidateCheck">
      <property name="skippedMethods" value="readObject, writeObject, readObjectNoData, readResolve, writeReplace"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.design.ConstructorWithoutParamsCheck">
      <property name="classNameFormat" value=".*Exception$"/>
      <property name="ignoredClassNameFormat" value="UnsupportedOperationException"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.design.InnerClassCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.HideUtilityClassConstructorCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.NestedSwitchCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.AvoidConditionInversionCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.CauseParameterInExceptionCheck"/>
    <module name="com.github.sevntu.checkstyle.checks.design.CheckstyleTestMakeupCheck"/>

    <!-- Naming -->
    <module name="com.github.sevntu.checkstyle.checks.naming.InterfaceTypeParameterNameCheck">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.naming.EnumValueNameCheck">
      <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
    </module>
    <module name="com.github.sevntu.checkstyle.checks.naming.UniformEnumConstantNameCheck">
      <property name="formats" value="^[A-Z][a-zA-Z0-9]*$,^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
    </module>

    <!-- Sizes -->
    <module name="com.github.sevntu.checkstyle.checks.sizes.LineLengthExtendedCheck">
      <property name="ignorePattern" value="^$"/>
      <property name="max" value="100"/>
      <property name="tabWidth" value="4"/>
      <property name="ignoreClass" value="false"/>
      <property name="ignoreConstructor" value="false"/>
      <property name="ignoreField" value="false"/>
      <property name="ignoreMethod" value="false"/>
    </module>


         <!-- Example of sevntu.checkstyle Check usage -->
         <!-- <module name="NestedSwitchCheck"/> -->

         <!-- usuppress javadoc parsing errors, as we test Check not a parser -->
         <module name="SuppressionXpathSingleFilter">
            <property name="message" value="Javadoc comment at column \d+ has parse error"/>
         </module>
    </module>


    <!-- as we run on regression even on non-compiled files we need to skip exceptions on them -->
    <module name="SuppressionSingleFilter">
      <property name="message" value="Exception occurred while parsing"/>
      <property name="checks" value="Checker"/>
    </module>
</module>
