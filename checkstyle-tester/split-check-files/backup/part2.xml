<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name = "Checker">
    <property name="charset" value="UTF-8"/>

    <!-- do not change severity to 'error', as that will hide errors caused by exceptions -->
    <property name="severity" value="warning"/>

    <!-- haltOnException is required for exception fixes and reporting of all exceptions -->
    <property name="haltOnException" value="false"/>

    <!-- BeforeExecutionFileFilters is required for sources of java9 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$" />
    </module>

    <module name="TreeWalker">
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Exception,
                         java.lang.Throwable,
                         java.lang.RuntimeException,
                         java.lang.NullPointerException"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="classes"
                      value="org.xml.sax.SAXException, org.xml.sax.SAXParseException,
                         org.apache.commons.beanutils.ConversionException,
                         org.antlr.v4.runtime.misc.ParseCancellationException,
                         antlr.RecognitionException, antlr.TokenStreamException,
                         antlr.TokenStreamRecognitionException, antlr.ANTLRException,
                         java.lang.StringBuffer"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <!-- Filters -->
        <module name="SuppressionCommentFilter">
            <!--
              Use suppressions.xml for suppressions, this is only example.
              checkFormat will prevent suppression comments from being valid.
            -->
            <property name="checkFormat" value="IGNORETHIS"/>
            <property name="offCommentFormat" value="CSOFF\: .*"/>
            <property name="onCommentFormat" value="CSON\: .*"/>
        </module>
        <!-- Tone down the checking for test code -->
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value="[\\/]internal[\\/].*[\\/]\w+Util\.java"/>
            <property name="checks" value="IllegalCatch"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/]test[\\/]"/>
            <property name="checks" value="EmptyBlock"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="JavadocVariable"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="JavadocType"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="MagicNumber"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="AvoidStaticImport"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="WriteTag"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="MethodCount"/>
        </module>
        <!-- Fixing these cases will decrease code readability -->
        <module name="SuppressionXpathSingleFilter">
            <property name="files" value=".*[\\/]src[\\/](test|it)[\\/]"/>
            <property name="checks" value="MultipleStringLiterals"/>
        </module>
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat"
                      value="-@cs\[(\w{8,}(\|\w{8,})*)\] \w[\(\)\-\.\'\`\,\:\;\w ]{10,}"/>
            <property name="checkFormat" value="$1"/>
            <property name="influenceFormat" value="3"/>
        </module>

        <!-- Imports -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <module name="CustomImportOrder">
            <property name="customImportOrderRules"
                      value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE"/>
            <property name="standardPackageRegExp" value="^java\."/>
            <property name="specialImportsRegExp" value="^javax\."/>
            <property name="thirdPartyPackageRegExp" value="^org\."/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
        </module>
        <module name="IllegalImport"/>
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,javax,org"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

         <!-- usuppress javadoc parsing errors, as we test Check not a parser -->
         <module name="SuppressionXpathSingleFilter">
            <property name="message" value="Javadoc comment at column \d+ has parse error"/>
         </module>
    </module>


    <!-- as we run on regression even on non-compiled files we need to skip exceptions on them -->
    <module name="SuppressionSingleFilter">
      <property name="message" value="Exception occurred while parsing"/>
      <property name="checks" value="Checker"/>
    </module>
</module>
